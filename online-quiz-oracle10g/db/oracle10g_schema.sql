-- Oracle 10g XE schema for Online Quiz System
-- Run as QUIZUSER (recommended) or another schema owner.

-- Optional: pin schema (if running as a different user with privileges)
-- ALTER SESSION SET CURRENT_SCHEMA = QUIZUSER;

------------------------------------------------------------
-- Drop objects (idempotent-ish)
------------------------------------------------------------
BEGIN EXECUTE IMMEDIATE 'DROP TABLE ATTEMPT_ANSWERS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE QUIZ_ATTEMPTS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE OPTIONS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE QUESTIONS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE QUIZZES CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE USERS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
-- Sequences
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_USERS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_QUIZZES'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_QUESTIONS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_OPTIONS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ATTEMPTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ATTEMPT_ANSWERS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/

------------------------------------------------------------
-- Tables
------------------------------------------------------------
CREATE TABLE USERS (
  USER_ID       NUMBER PRIMARY KEY,
  USERNAME      VARCHAR2(50) UNIQUE NOT NULL,
  PASSWORD_HASH VARCHAR2(64) NOT NULL, -- SHA-256 hex
  FULL_NAME     VARCHAR2(100),
  CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE TABLE QUIZZES (
  QUIZ_ID       NUMBER PRIMARY KEY,
  TITLE         VARCHAR2(100) NOT NULL,
  DESCRIPTION   VARCHAR2(4000),
  DURATION_SEC  NUMBER DEFAULT 300 NOT NULL, -- default 5 min
  CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE TABLE QUESTIONS (
  QUESTION_ID   NUMBER PRIMARY KEY,
  QUIZ_ID       NUMBER NOT NULL,
  QUESTION_TEXT CLOB NOT NULL,
  CONSTRAINT FK_Q_QUIZ FOREIGN KEY (QUIZ_ID) REFERENCES QUIZZES(QUIZ_ID) ON DELETE CASCADE
);

CREATE TABLE OPTIONS (
  OPTION_ID     NUMBER PRIMARY KEY,
  QUESTION_ID   NUMBER NOT NULL,
  OPTION_TEXT   CLOB NOT NULL,
  IS_CORRECT    CHAR(1) DEFAULT 'N' CHECK (IS_CORRECT IN ('Y','N')),
  CONSTRAINT FK_O_Q FOREIGN KEY (QUESTION_ID) REFERENCES QUESTIONS(QUESTION_ID) ON DELETE CASCADE
);

CREATE TABLE QUIZ_ATTEMPTS (
  ATTEMPT_ID    NUMBER PRIMARY KEY,
  USER_ID       NUMBER NOT NULL,
  QUIZ_ID       NUMBER NOT NULL,
  STARTED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP,
  ENDED_AT      TIMESTAMP,
  SCORE         NUMBER DEFAULT 0,
  TOTAL_QUESTIONS NUMBER NOT NULL,
  DURATION_SEC  NUMBER NOT NULL,
  CONSTRAINT FK_A_USER FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
  CONSTRAINT FK_A_QUIZ FOREIGN KEY (QUIZ_ID) REFERENCES QUIZZES(QUIZ_ID) ON DELETE CASCADE
);

CREATE TABLE ATTEMPT_ANSWERS (
  ATTEMPT_ANSWER_ID NUMBER PRIMARY KEY,
  ATTEMPT_ID        NUMBER NOT NULL,
  QUESTION_ID       NUMBER NOT NULL,
  SELECTED_OPTION_ID NUMBER,
  IS_CORRECT        CHAR(1) CHECK (IS_CORRECT IN ('Y','N')),
  CONSTRAINT FK_AA_ATTEMPT FOREIGN KEY (ATTEMPT_ID) REFERENCES QUIZ_ATTEMPTS(ATTEMPT_ID) ON DELETE CASCADE,
  CONSTRAINT FK_AA_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES QUESTIONS(QUESTION_ID) ON DELETE CASCADE,
  CONSTRAINT FK_AA_OPTION FOREIGN KEY (SELECTED_OPTION_ID) REFERENCES OPTIONS(OPTION_ID)
);

------------------------------------------------------------
-- Sequences
------------------------------------------------------------
CREATE SEQUENCE SEQ_USERS START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_QUIZZES START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_QUESTIONS START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_OPTIONS START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_ATTEMPTS START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_ATTEMPT_ANSWERS START WITH 1 INCREMENT BY 1 NOCACHE;

------------------------------------------------------------
-- Triggers to emulate identity
------------------------------------------------------------
CREATE OR REPLACE TRIGGER BI_USERS
BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
  IF :NEW.USER_ID IS NULL THEN :NEW.USER_ID := SEQ_USERS.NEXTVAL; END IF;
END;
/
CREATE OR REPLACE TRIGGER BI_QUIZZES
BEFORE INSERT ON QUIZZES
FOR EACH ROW
BEGIN
  IF :NEW.QUIZ_ID IS NULL THEN :NEW.QUIZ_ID := SEQ_QUIZZES.NEXTVAL; END IF;
END;
/
CREATE OR REPLACE TRIGGER BI_QUESTIONS
BEFORE INSERT ON QUESTIONS
FOR EACH ROW
BEGIN
  IF :NEW.QUESTION_ID IS NULL THEN :NEW.QUESTION_ID := SEQ_QUESTIONS.NEXTVAL; END IF;
END;
/
CREATE OR REPLACE TRIGGER BI_OPTIONS
BEFORE INSERT ON OPTIONS
FOR EACH ROW
BEGIN
  IF :NEW.OPTION_ID IS NULL THEN :NEW.OPTION_ID := SEQ_OPTIONS.NEXTVAL; END IF;
END;
/
CREATE OR REPLACE TRIGGER BI_ATTEMPTS
BEFORE INSERT ON QUIZ_ATTEMPTS
FOR EACH ROW
BEGIN
  IF :NEW.ATTEMPT_ID IS NULL THEN :NEW.ATTEMPT_ID := SEQ_ATTEMPTS.NEXTVAL; END IF;
END;
/
CREATE OR REPLACE TRIGGER BI_ATTEMPT_ANSWERS
BEFORE INSERT ON ATTEMPT_ANSWERS
FOR EACH ROW
BEGIN
  IF :NEW.ATTEMPT_ANSWER_ID IS NULL THEN :NEW.ATTEMPT_ANSWER_ID := SEQ_ATTEMPT_ANSWERS.NEXTVAL; END IF;
END;
/
